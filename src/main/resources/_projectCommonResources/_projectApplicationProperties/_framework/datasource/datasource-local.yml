#replication 구성이 아닐경우.. write 와 read를 동일 정보로 입력해서 처리 가능 (단 maximum-pool-size 를 어떻게 나눠 쓸지 결정 필요)

spring:
  datasource:
    #write, read로 리플리케이션 구조 설정
    write:
      driver-class-name: com.mysql.cj.jdbc.Driver #(디폴트)
      jdbc-url: jdbc:mysql://localhost:3306/spt_web_fw?serverTimezone=UTC
      #driver-class-name: net.sf.log4jdbc.sql.jdbcapi.DriverSpy
      #jdbc-url: jdbc:log4jdbc:mysql://localhost:3306/spt_web_fw?serverTimezone=UTC
      username: stek
      password: ENC(/Ylid4X1rWuhuuo+FUfo0QjXWXdPROMxoYh3JQ916zpfkotbS3rGcWQWMfKYALCc)
      pool-name: Hikari write Connection Pool
      maximum-pool-size: 20
      connectionTimeout: 30000
      idleTimeout: 600000
      maxLifetime: 1800000
    read:
      driver-class-name: com.mysql.cj.jdbc.Driver #(디폴트)
      jdbc-url: jdbc:mysql://localhost:3306/spt_web_fw?serverTimezone=UTC
      #driver-class-name: net.sf.log4jdbc.sql.jdbcapi.DriverSpy
      #jdbc-url: jdbc:log4jdbc:mysql://localhost:3307/spt_web_fw?serverTimezone=UTC
      username: sptek
      password: ENC(/Ylid4X1rWuhuuo+FUfo0QjXWXdPROMxoYh3JQ916zpfkotbS3rGcWQWMfKYALCc)
      pool-name: Hikari read Connection Pool
      maximum-pool-size: 20
      connectionTimeout: 30000
      idleTimeout: 600000
      maxLifetime: 1800000

# master / slave 궈리 호출 여부를 확인 하기 위한 예시 쿼리
#SHOW VARIABLES LIKE 'log_output';
#SHOW VARIABLES LIKE 'general_log';
#
#SET GLOBAL log_output = 'TABLE';
#SET GLOBAL general_log = 'ON';
#
#SELECT
#CONVERT_TZ(event_time, '+00:00', '+09:00') AS event_time_kst,
#user_host,
#argument
#FROM mysql.general_log
#WHERE user_host LIKE '%sptek%'
#ORDER BY event_time DESC
#LIMIT 5;
