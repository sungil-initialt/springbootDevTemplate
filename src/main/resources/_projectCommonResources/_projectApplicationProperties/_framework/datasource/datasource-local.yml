#replication 구성이 아닐경우.. write 와 read를 동일 정보로 입력해서 처리 가능 (단 maximum-pool-size 를 어떻게 나눠 쓸지 결정 필요)

spring:
  datasource:
    #read, write 로 리플리케이션 구조 설정
    read:
      #디폴트
      driverClassName: com.mysql.cj.jdbc.Driver
      jdbcUrl: ENC(JLRTPJAkja4JvpWgGlp9wWHAvFek/tmqFEufjNLlUoO5MlqOSFr7HwSZYJW0fBi7Bp+N6r9XqcpQCVudPBsb9Fmhoye5+W3VvNpP1cHAA0+TyFLhaPltwHDTq4MUYtSJ)
      #동작 쿼리를 보고 싶을때
      #driver-class-name: net.sf.log4jdbc.sql.jdbcapi.DriverSpy
      #jdbc-url: jdbc:log4jdbc:mysql://localhost:3306/spt_web_fw?serverTimezone=UTC
      userName: ENC(wIaJU8XkPiTwsfW0DDuSkRdH7v3vRD/Xq+etGeYLTPAxVzKvS51EIbapqCpgvzRG)
      password: ENC(/Ylid4X1rWuhuuo+FUfo0QjXWXdPROMxoYh3JQ916zpfkotbS3rGcWQWMfKYALCc)

      poolName: Hikari READ Connection Pool
      maximumPoolSize: 20
      minimumIdle: 8
      connectionTimeout: 8_000
      idleTimeout: 600_000
      maxLifetime: 1800_000
      validationTimeout: 5_000
      readOnly: true

    write:
      #디폴트
      driverClassName: com.mysql.cj.jdbc.Driver
      jdbcUrl: ENC(y9zahUiK0aZv+BgcGVeej2gkJB3DKdFdHxjkr5nHEyGnPut25RQct95hzzevhZcxrskOp3/fzgeTRtlYfVDxDqNz6XZXLzoZGWOe3oA7QluRs2M0D+JAPfmx63zoKt8k)
      #동작 쿼리를 보고 싶을때
      #driver-class-name: net.sf.log4jdbc.sql.jdbcapi.DriverSpy
      #jdbc-url: jdbc:log4jdbc:mysql://localhost:3306/spt_web_fw?serverTimezone=UTC
      userName: ENC(wIaJU8XkPiTwsfW0DDuSkRdH7v3vRD/Xq+etGeYLTPAxVzKvS51EIbapqCpgvzRG)
      password: ENC(/Ylid4X1rWuhuuo+FUfo0QjXWXdPROMxoYh3JQ916zpfkotbS3rGcWQWMfKYALCc)

      poolName: Hikari WRITE Connection Pool
      maximumPoolSize: 20
      minimumIdle: 8
      connectionTimeout: 8_000
      idleTimeout: 600_000
      maxLifetime: 1800_000
      validationTimeout: 5_000

# master / slave 궈리 호출 여부를 확인 하기 위한 예시 쿼리
#SHOW VARIABLES LIKE 'log_output';
#SHOW VARIABLES LIKE 'general_log';
#
#SET GLOBAL log_output = 'TABLE';
#SET GLOBAL general_log = 'ON';
#
#SELECT
#CONVERT_TZ(event_time, '+00:00', '+09:00') AS event_time_kst,
#user_host,
#argument
#FROM mysql.general_log
#WHERE user_host LIKE '%sptek%'
#ORDER BY event_time DESC
#LIMIT 5;
