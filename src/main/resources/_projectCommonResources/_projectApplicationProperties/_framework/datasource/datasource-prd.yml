#replication 구성이 아닐경우.. write 와 read를 동일 정보로 입력해서 처리 가능 (단 maximum-pool-size 를 어떻게 나눠 쓸지 결정 필요)

spring:
  datasource:
    #write, read로 리플리케이션 구조 설정
    write:
      #디폴트
      driver-class-name: com.mysql.cj.jdbc.Driver
      jdbc-url: jdbc:mysql://localhost:3306/spt_web_fw?serverTimezone=UTC
      #동작 쿼리를 보고 싶을때
      #driver-class-name: net.sf.log4jdbc.sql.jdbcapi.DriverSpy
      #jdbc-url: jdbc:log4jdbc:mysql://localhost:3306/spt_web_fw?serverTimezone=UTC

      username: sptek
      password: ENC(/Ylid4X1rWuhuuo+FUfo0QjXWXdPROMxoYh3JQ916zpfkotbS3rGcWQWMfKYALCc)
      pool-name: Hikari write Connection Pool
      maximum-pool-size: 100
      connectionTimeout: 30000
      idleTimeout: 600000
      maxLifetime: 1800000
    read:
      #디폴트
      driver-class-name: com.mysql.cj.jdbc.Driver
      jdbc-url: jdbc:mysql://localhost:3306/spt_web_fw?serverTimezone=UTC
      #동작 쿼리를 보고 싶을때
      #driver-class-name: net.sf.log4jdbc.sql.jdbcapi.DriverSpy
      #jdbc-url: jdbc:log4jdbc:mysql://localhost:3306/spt_web_fw?serverTimezone=UTC

      username: sptek
      password: ENC(/Ylid4X1rWuhuuo+FUfo0QjXWXdPROMxoYh3JQ916zpfkotbS3rGcWQWMfKYALCc)
      pool-name: Hikari read Connection Pool
      maximum-pool-size: 100
      connectionTimeout: 30000
      idleTimeout: 600000
      maxLifetime: 1800000