project-info:
  name: myProject
  version: v1
  description : Local


system:
  propertySources:
    expose-enabled: ture #스프링 스타트시 시스템 property를 로그로 보여줄지 설정


server:
  port: 8080
  servlet.session.cookie:
    http-only: false
    secure: false #(ssl 사용시 설정과 상관없이 true로 설정됨, ssl 비사용시 false로 설정할수 있으나 false 일경우 브라우저가 자체 block처리하여 사용이 불가능함)
    same-site: none
  #사설 인증사의 경우 로컬 테스트를 위해 브라우저 설정 필요 (chrome://flags/ -> Allow invalid certificates for resources loaded from localhost. -> Enabled, 도메인은 front.localhost:8080 형태로 구성)
  ssl:
    key-store: classpath:keystore/keystore.p12
    key-store-type: PKCS12
    key-store-password: keystore_password
  #에러전파순서 :
  #개발자가만든ExHandler에서처리 (핸들러가 있어도 404같이 서블릿컨테이너 진입전 에러는 처리못하고 넘김)
  #--> 스프링제공에러기본페이지 (특정위치에 404.html, 5xx.html 과 같이 페이지를 만들어 놓으면 에러코드에 마춰 해당 페이지 호출해줌, 페이지가 없으면 기본폼으로 호출, whitelabel.enabled가 false이면 그냥 넘김)
  #--> WAS제공에러기본페이지 (스프링 내부에서 처리하지 못하면 was가 제공하는 기봄폼으로 노출)
  error: #스프링에서 제공하는 에러 기본 처리 설정
    include-exception: true #exception 정보를 보여줄지
    include-stacktrace: always #stacktrace 를 보여줄지
    path: error #에러 처리에 대한 뷰 경로
    whitelabel.enabled: false #스프링의 기본 에러 페이지(Whitelabel Error Page)를 사용할지


Storage:
  multipartFiles:
    basePath: c:/


logging:
  level: #log level은 logback config 파일에 그대로 반영됨
    root: info
    com:
      sptek.webfw: debug
      zaxxer.hikari.pool.HikariPool: info
    org:
      mybatis.spring: info
    jdbc:
      audit: info
      resultset: info
      resultsettable: info #INFO  #SQL 결과 데이터 Table을 로그로 남긴다.
      sqlonly: info     #SQL만 로그로 남긴다.
      sqltiming: info    #SQL과 소요시간을 표기한다.
      connection: info  # 커넥션 확인가능
  config: classpath:logbackConfig/logback-spring-local.xml


spring:
  devtools: #코드 수정 실시간 반영
    livereload:
      enabled: true
    restart:
      enabled: true
  config:
    import: #기본 프로퍼티가 아닌 추가적인 property 파일로 구성 필요시.
      - classpath:specificProperties/specificName.yml
      - classpath:specificProperties/secureOption.yml
  thymeleaf:
    enabled: true
    cache: false
    check-template-location: true
    #prefix: classpath:/templates/thymeleaf/ #이렇게 설정하면 로컬서버에서 실행중 실시간 수정 변경이 안되는 현상이 있음
    prefix: file:src/main/resources/templates/thymeleaf/
    suffix: .html
  #jsp로 설정할때
  #mvc:
  #  view:
  #    prefix: /WEB-INF/views/
  #    suffix: .jsp
  h2: #H2 DB 사용은 프로퍼티설정만 있음
    console:
      enabled: true #웹콘솔 사용 여부
      path: /h2-console #웹콘솔 url 경로
  datasource: #리플리카 구성이 아닌 단순 DS 사용
    #url: jdbc:h2:G:\내 드라이브\work\sptek\frameWork\webfw1\spt-wfw\src\main\resources\h2\local  #해당 위치에 cmd로 copy con local.mv.db 을 통해 파일 생성
    url: jdbc:h2:G:\내 드라이브\work\sptek\frameWork\webfw1\spt-wfw\src\main\resources\h2\local;AUTO_SERVER=TRUE  #해당 위치에 cmd로 copy con local.mv.db 을 통해 파일 생성, embed지만 서버모드로
    driverClassName: org.h2.Driver
    username: sa
    password:


#PageInoSupport 클레스 관련 설정
pagehelper:
  helper-dialect: mysql
  auto-dialect: true
  page-size-zero: false
  reasonable: true
  offset-as-page-num: false
  row-bounds-with-count: false
  auto-runtime-dialect: false
  close-conn: true
  default-count: true


jasypt:
  encryptor:
    bean=encryptorBean: jasyptStringEncryptor
    secretKey: JasyptStringEncryptor_key_Hello


# Swagger springdoc-ui Configuration
springdoc:
  packages-to-scan: com.sptek.webfw.example.api.api1
  default-consumes-media-type: application/json;charset=UTF-8
  default-produces-media-type: application/json;charset=UTF-8
  swagger-ui:
    path: swagger-ui.html         # Swagger UI 경로 => http://localhost:8080/swagger-ui.html
    tags-sorter: alpha            # alpha: 알파벳 순 태그 정렬, method: HTTP Method 순 정렬
    operations-sorter: alpha      # alpha: 알파벳 순 태그 정렬, method: HTTP Method 순 정렬
  api-docs:
    path: /api-docs/json
    groups:
      enabled: true
  cache:
    disabled: true